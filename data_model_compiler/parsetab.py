
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'dbsAT COMMA DATA_TYPE EQUAL IDENTIFIER INDEX_TYPE NEWLINE R_BRACKET_BEGIN R_BRACKET_END STRING S_BRACKET_BEGIN S_BRACKET_ENDdbs : table\n\t       | db newlines dbs\n\t       | table newlines dbsdb : AT IDENTIFIER NEWLINE\n\t      | AT IDENTIFIER R_BRACKET_BEGIN attributes R_BRACKET_END NEWLINEtable : IDENTIFIER NEWLINE columns\n\t         | IDENTIFIER R_BRACKET_BEGIN attributes R_BRACKET_END NEWLINE columnscolumns : column NEWLINE\n\t           | column NEWLINE indexes\n\t           | column NEWLINE columnscolumn : column_type IDENTIFIER\n\t      \t  | column_type IDENTIFIER R_BRACKET_BEGIN attributes R_BRACKET_ENDattributes : attribute\n\t               | attribute COMMA attributesattribute : IDENTIFIER\n\t             | IDENTIFIER EQUAL IDENTIFIER\n\t             | IDENTIFIER EQUAL STRINGcolumn_type : DATA_TYPE\n\t               | DATA_TYPE S_BRACKET_BEGIN lengths S_BRACKET_ENDlengths : IDENTIFIER\n\t           | IDENTIFIER COMMA lengthsindexes : index NEWLINE\n\t           | index NEWLINE indexesindex : index_type R_BRACKET_BEGIN fields R_BRACKET_END\n\t         | index_type IDENTIFIER R_BRACKET_BEGIN fields R_BRACKET_ENDindex_type : INDEX_TYPE\n\t              | INDEX_TYPE INDEX_TYPEfields : IDENTIFIER\n\t          | IDENTIFIER COMMA fieldsnewlines : NEWLINE\n\t            | NEWLINE newlines'
    
_lr_action_items = {'IDENTIFIER':([0,5,6,7,8,10,13,17,18,23,26,27,29,34,35,36,45,47,49,50,56,60,],[4,11,4,-30,4,19,-31,25,-18,19,38,39,19,46,-26,19,55,-27,-19,38,55,55,]),'AT':([0,6,7,8,13,],[5,5,-30,5,-31,]),'$end':([1,2,12,14,15,24,31,32,44,51,53,],[0,-1,-3,-2,-6,-8,-9,-10,-22,-7,-23,]),'NEWLINE':([2,3,4,7,11,15,16,22,24,25,28,31,32,33,43,44,51,52,53,57,59,63,],[7,7,9,7,22,-6,24,-4,-8,-11,41,-9,-10,44,52,-22,-7,-5,-23,-12,-24,-25,]),'R_BRACKET_BEGIN':([4,11,25,34,35,46,47,],[10,23,36,45,-26,56,-27,]),'DATA_TYPE':([9,24,41,],[18,18,18,]),'S_BRACKET_BEGIN':([18,],[26,]),'COMMA':([19,21,38,39,40,55,],[-15,29,50,-16,-17,60,]),'R_BRACKET_END':([19,20,21,30,39,40,42,48,54,55,61,62,],[-15,28,-13,43,-16,-17,-14,57,59,-28,63,-29,]),'EQUAL':([19,],[27,]),'INDEX_TYPE':([24,35,44,],[35,47,35,]),'STRING':([27,],[40,]),'S_BRACKET_END':([37,38,58,],[49,-20,-21,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'dbs':([0,6,8,],[1,12,14,]),'table':([0,6,8,],[2,2,2,]),'db':([0,6,8,],[3,3,3,]),'newlines':([2,3,7,],[6,8,13,]),'columns':([9,24,41,],[15,32,51,]),'column':([9,24,41,],[16,16,16,]),'column_type':([9,24,41,],[17,17,17,]),'attributes':([10,23,29,36,],[20,30,42,48,]),'attribute':([10,23,29,36,],[21,21,21,21,]),'indexes':([24,44,],[31,53,]),'index':([24,44,],[33,33,]),'index_type':([24,44,],[34,34,]),'lengths':([26,50,],[37,58,]),'fields':([45,56,60,],[54,61,62,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> dbs","S'",1,None,None,None),
  ('dbs -> table','dbs',1,'p_dbs','api_yacc.py',9),
  ('dbs -> db newlines dbs','dbs',3,'p_dbs','api_yacc.py',10),
  ('dbs -> table newlines dbs','dbs',3,'p_dbs','api_yacc.py',11),
  ('db -> AT IDENTIFIER NEWLINE','db',3,'p_db','api_yacc.py',25),
  ('db -> AT IDENTIFIER R_BRACKET_BEGIN attributes R_BRACKET_END NEWLINE','db',6,'p_db','api_yacc.py',26),
  ('table -> IDENTIFIER NEWLINE columns','table',3,'p_table','api_yacc.py',33),
  ('table -> IDENTIFIER R_BRACKET_BEGIN attributes R_BRACKET_END NEWLINE columns','table',6,'p_table','api_yacc.py',34),
  ('columns -> column NEWLINE','columns',2,'p_columns','api_yacc.py',45),
  ('columns -> column NEWLINE indexes','columns',3,'p_columns','api_yacc.py',46),
  ('columns -> column NEWLINE columns','columns',3,'p_columns','api_yacc.py',47),
  ('column -> column_type IDENTIFIER','column',2,'p_column','api_yacc.py',65),
  ('column -> column_type IDENTIFIER R_BRACKET_BEGIN attributes R_BRACKET_END','column',5,'p_column','api_yacc.py',66),
  ('attributes -> attribute','attributes',1,'p_attributes','api_yacc.py',77),
  ('attributes -> attribute COMMA attributes','attributes',3,'p_attributes','api_yacc.py',78),
  ('attribute -> IDENTIFIER','attribute',1,'p_attribute','api_yacc.py',87),
  ('attribute -> IDENTIFIER EQUAL IDENTIFIER','attribute',3,'p_attribute','api_yacc.py',88),
  ('attribute -> IDENTIFIER EQUAL STRING','attribute',3,'p_attribute','api_yacc.py',89),
  ('column_type -> DATA_TYPE','column_type',1,'p_column_type','api_yacc.py',98),
  ('column_type -> DATA_TYPE S_BRACKET_BEGIN lengths S_BRACKET_END','column_type',4,'p_column_type','api_yacc.py',99),
  ('lengths -> IDENTIFIER','lengths',1,'p_lengths','api_yacc.py',108),
  ('lengths -> IDENTIFIER COMMA lengths','lengths',3,'p_lengths','api_yacc.py',109),
  ('indexes -> index NEWLINE','indexes',2,'p_indexes','api_yacc.py',119),
  ('indexes -> index NEWLINE indexes','indexes',3,'p_indexes','api_yacc.py',120),
  ('index -> index_type R_BRACKET_BEGIN fields R_BRACKET_END','index',4,'p_index','api_yacc.py',129),
  ('index -> index_type IDENTIFIER R_BRACKET_BEGIN fields R_BRACKET_END','index',5,'p_index','api_yacc.py',130),
  ('index_type -> INDEX_TYPE','index_type',1,'p_index_type','api_yacc.py',143),
  ('index_type -> INDEX_TYPE INDEX_TYPE','index_type',2,'p_index_type','api_yacc.py',144),
  ('fields -> IDENTIFIER','fields',1,'p_fields','api_yacc.py',149),
  ('fields -> IDENTIFIER COMMA fields','fields',3,'p_fields','api_yacc.py',150),
  ('newlines -> NEWLINE','newlines',1,'p_newlines','api_yacc.py',159),
  ('newlines -> NEWLINE newlines','newlines',2,'p_newlines','api_yacc.py',160),
]
